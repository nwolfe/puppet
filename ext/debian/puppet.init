#! /bin/sh
### BEGIN INIT INFO
# Provides:          puppet
# Required-Start:    $network $named $remote_fs $syslog
# Required-Stop:     $network $named $remote_fs $syslog
# Should-Start:      puppet
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

PATH=/opt/puppetlabs/agent/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/opt/puppetlabs/agent/bin/puppet
DAEMON_OPTS=""
NAME="agent"
PROCNAME="puppet"
DESC="puppet agent"
PIDFILE="/var/run/puppetlabs/${NAME}.pid"

test -x $DAEMON || exit 0

[ -r /etc/default/puppet ] && . /etc/default/puppet

. /lib/lsb/init-functions

is_true() {
    if [ "x$1" = "xtrue" -o "x$1" = "xyes" -o "x$1" = "x0" ] ; then
       return 0
    else
        return 1
    fi
}

reload_puppet_agent() {
    start-stop-daemon --stop --quiet --signal HUP --pidfile $PIDFILE --name $PROCNAME
}

start_puppet_agent() {
    if is_true "$START" ; then
        start-stop-daemon --start --quiet --pidfile $PIDFILE \
          --startas $DAEMON -- $NAME $DAEMON_OPTS
    else
        echo ""
        echo "puppet not configured to start, please edit /etc/default/puppet to enable"
    fi
}

stop_puppet_agent() {
    start-stop-daemon --stop --retry TERM/10/KILL/5 --quiet --oknodo --pidfile $PIDFILE --name $PROCNAME
    rm -f "$PIDFILE"
}

status_puppet_agent() {
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
}

case "$1" in
    start)
        log_begin_msg "Starting $DESC"
        start_puppet_agent
        log_end_msg $?
    ;;
    stop)
        log_begin_msg "Stopping $DESC"
        stop_puppet_agent
        log_end_msg $?
    ;;
    reload)
        log_begin_msg "Reloading $DESC"
        reload_puppet_agent
        log_end_msg $?
    ;;
    status)
        status_puppet_agent
    ;;
    restart|force-reload)
        log_begin_msg "Restarting $DESC"
        stop_puppet_agent
        start_puppet_agent
        log_end_msg $?
    ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|force-reload|reload}" >&2
        exit 1
    ;;
esac
